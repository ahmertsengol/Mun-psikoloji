import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function testDelete() {
  try {
    console.log('üß™ Silme i≈ülemlerini test ediyorum...\n');
    
    // √ñnce mevcut verileri listele
    const posts = await prisma.post.findMany({
      select: { id: true, title: true, type: true },
      take: 3
    });
    
    const events = await prisma.event.findMany({
      select: { id: true, title: true },
      take: 2
    });
    
    console.log('üìù Test edilecek postlar:');
    posts.forEach((post, index) => {
      console.log(`   ${index + 1}. ${post.title} (ID: ${post.id})`);
    });
    
    console.log('\nüéâ Test edilecek etkinlikler:');
    events.forEach((event, index) => {
      console.log(`   ${index + 1}. ${event.title} (ID: ${event.id})`);
    });
    
    console.log('\n‚ö†Ô∏è  Bu sadece bir test scriptidir. Ger√ßek silme i≈ülemi yapmayacaƒüƒ±m.');
    console.log('Silme i≈ülemlerinin √ßalƒ±≈üƒ±p √ßalƒ±≈ümadƒ±ƒüƒ±nƒ± kontrol etmek i√ßin:');
    console.log('1. Admin paneline giri≈ü yapƒ±n');
    console.log('2. Herhangi bir post veya etkinliƒüi silmeyi deneyin');
    console.log('3. Silme i≈ülemi sonrasƒ± bu scripti tekrar √ßalƒ±≈ütƒ±rƒ±n\n');
    
    // API endpoint'lerini test etmek i√ßin √∂rnek curl komutlarƒ±
    if (posts.length > 0) {
      console.log('üîß Manuel test i√ßin √∂rnek API √ßaƒürƒ±larƒ±:');
      console.log(`curl -X DELETE http://localhost:3000/api/posts/${posts[0].id}`);
      if (events.length > 0) {
        console.log(`curl -X DELETE http://localhost:3000/api/events/${events[0].id}`);
      }
    }
    
  } catch (error) {
    console.error('‚ùå Hata:', error);
  } finally {
    await prisma.$disconnect();
  }
}

testDelete();